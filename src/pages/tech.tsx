import Head from "next/head";
import Link from "next/link";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  return (
    <>
      <Head>
        <title>SciREN: Techincal Details</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>SciREN-Net: Technical Details</h1>
        <div className={styles.miniNav}>
          <Link href="/" className={styles.miniLink}>
            Home
          </Link>
          <a href="/sprint1" className={styles.miniLink}>
            Sprint 1
          </a>
          <a href="/sprint2" className={styles.miniLink}>
            Sprint 2
          </a>
          <a href="/tech" className={styles.miniLink + " " + styles.sunderline}>
            Technical Details
          </a>
        </div>

        <hr></hr>
        <h2 className={styles.sheader}>Approach</h2>
        <h3>General Philosophy</h3>
        <p>
          With the knowledge that our project is on a serious time crunch for
          its scope, we&apos;ve prioritized two metrics above all else:
          simplicity and ergonomics. Every tool we use should be easy to learn,
          test, and deploy in any of our team members&apos; local environments.
          We&apos;ve been open to sacrifices in scalability and beauty for the
          benefit of our learning experience and a tight iteration loop.
        </p>
        <h3>Funcitonality</h3>
        <p>
          Since SciREN has no existing platform to connect users, our site is
          focused on creating a secure and simple social experience first, with
          auxilary features to follow. The top priority is to deliver a complete
          MVP that facilitates this novel core for our client.
        </p>
        <h3>Asthetics</h3>
        <p>
          The design of our site is a work in progress, but we&apos;ve decided
          to postpone settling on a beautiful theme until the site has reached
          an acceptable level of functionality. Prioritizing design in the short
          term would lead to slower progress due to frequent refactoring.
        </p>
        <h2 className={styles.sheader}>Tools / APIs / Frameworks</h2>
        <h3>Web Frameworks</h3>
        <p>
          We&apos;ve decided to use Next.js + React as our web framework for
          this project for its routing power and integration with vercel for
          deployment. For our database, a simple MongoDB atlas instance avoids
          local synchronization requirements and promotes fast iteration due to
          its document structure.
        </p>
        <h3>Database</h3>
        <p>
          Again, with simplicity in mind, we&apos;ve decided to use MongoDB as
          our database driver for its mutability and cloud accessibility.
          MongoDB atlas provides free cloud storage up to 512MB, which is more
          than enough for our MVP. Using cloud storage has simplified
          deployment, synchronization, and testing tremendously. Most
          large-scale projects would prefer a table-storage DB, but the document
          structure has made prototyping fantastically comfortable.
        </p>
        <h3>Data Storage</h3>
        <p>
          We&apos;ve decided to use AWS S3 for our data storage, as there exists
          no affordable compeditor. GCP is for startups and over-funded labs.
        </p>
        <h3>Authentication</h3>
        <p>
          User authentication was a must, and we quickly found{" "}
          <a
            href="https://github.com/vvo/iron-session"
            className={styles.inlineLink}
          >
            iron-session
          </a>
          , a user session manager that uses simple encrypted cookies to open
          user state to our webpages without exposing user data to web scrapers.
          This allowed us to create our own sign-in system, rather than relying
          on an existing solution.
        </p>
        <h3>Design</h3>
        <p>
          As mentioned before, design is not our concentration; however, we
          found that the{" "}
          <a href="https://mui.com/" className={styles.inlineLink}>
            material-ui
          </a>
          library provides plug-and-play components that are styled
          automatically with themes that closely aligned with our existing
          vision.
        </p>
      </main>
    </>
  );
}
